(window.webpackJsonp=window.webpackJsonp||[]).push([[11],{416:function(t,e,a){"use strict";a.r(e);var r=a(2),n=Object(r.a)({},(function(){var t=this,e=t._self._c;return e("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[e("h2",{attrs:{id:"整体流程"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#整体流程"}},[t._v("#")]),t._v(" 整体流程")]),t._v(" "),e("p",[t._v("连接器->分析器(词法、语法)->优化器(生成执行计划:用啥索引、join的表顺序)->执行器(操作引擎，返回结果)->存储引擎(存储数据，提供读写接口)")]),t._v(" "),e("h2",{attrs:{id:"专业名词定义"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#专业名词定义"}},[t._v("#")]),t._v(" 专业名词定义")]),t._v(" "),e("p",[t._v("crash-safe 数据异常重启，之前提交的数据库记录也不会丢失")]),t._v(" "),e("h2",{attrs:{id:"常用命令"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#常用命令"}},[t._v("#")]),t._v(" 常用命令")]),t._v(" "),e("div",{staticClass:"language- extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[t._v("查询进程\nSHOW FULL PROCESSLIST;\n\n")])])]),e("h2",{attrs:{id:"常见参数"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#常见参数"}},[t._v("#")]),t._v(" 常见参数")]),t._v(" "),e("ul",[e("li",[t._v("wait_timeout 默认值8小时, 连接空闲太久自动断开，如果mysql断开后，客户端发起，就会显示错误 "),e("code",[t._v("Lost connection to MySQL server during query。")]),t._v("，需要重新连接执行命令")]),t._v(" "),e("li",[t._v("innodb_flush_log_at_trx_commit 设置为1，每次事务提交都会讲redo log磁盘中")]),t._v(" "),e("li",[t._v("sync_binlog 设置为1，每次事务中binlog都会刷到磁盘中")])]),t._v(" "),e("h2",{attrs:{id:"关联对比"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#关联对比"}},[t._v("#")]),t._v(" 关联对比")]),t._v(" "),e("h3",{attrs:{id:"redo-log-binlog"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#redo-log-binlog"}},[t._v("#")]),t._v(" redo log & binlog")]),t._v(" "),e("table",[e("thead",[e("tr",[e("th",{staticStyle:{"text-align":"center"}},[t._v("比较维度")]),t._v(" "),e("th",{staticStyle:{"text-align":"center"}},[t._v("binlog")]),t._v(" "),e("th",{staticStyle:{"text-align":"center"}},[t._v("redo log")])])]),t._v(" "),e("tbody",[e("tr",[e("td",{staticStyle:{"text-align":"center"}},[t._v("层次")]),t._v(" "),e("td",{staticStyle:{"text-align":"center"}},[t._v("mysql server")]),t._v(" "),e("td",{staticStyle:{"text-align":"center"}},[t._v("innode存储引擎")])]),t._v(" "),e("tr",[e("td",{staticStyle:{"text-align":"center"}},[t._v("文件类型")]),t._v(" "),e("td",{staticStyle:{"text-align":"center"}},[t._v("逻辑日志 二进制形式，有ROW、Statement、Mixed三种模式")]),t._v(" "),e("td",{staticStyle:{"text-align":"center"}},[t._v("物理日志，记录如何更新数据页")])]),t._v(" "),e("tr",[e("td",{staticStyle:{"text-align":"center"}},[t._v("作用")]),t._v(" "),e("td",{staticStyle:{"text-align":"center"}},[t._v("use for Point-in-time Recovery,用于主从同步、数据异构")]),t._v(" "),e("td",{staticStyle:{"text-align":"center"}},[t._v("handle crash recover,保证持久化")])]),t._v(" "),e("tr",[e("td",{staticStyle:{"text-align":"center"}},[t._v("写入时机")]),t._v(" "),e("td",{staticStyle:{"text-align":"center"}},[t._v("事务提交时写入")]),t._v(" "),e("td",{staticStyle:{"text-align":"center"}},[t._v("固定时间或者事务提交时(**没有提交的事务也会flush to disk，**后续如果事务回滚，采用undo log回滚数据)")])]),t._v(" "),e("tr",[e("td",{staticStyle:{"text-align":"center"}},[t._v("文件使用形式")]),t._v(" "),e("td",{staticStyle:{"text-align":"center"}},[t._v("循环覆盖")]),t._v(" "),e("td",{staticStyle:{"text-align":"center"}},[t._v("累加")])]),t._v(" "),e("tr",[e("td",{staticStyle:{"text-align":"center"}}),t._v(" "),e("td",{staticStyle:{"text-align":"center"}}),t._v(" "),e("td",{staticStyle:{"text-align":"center"}})])])]),t._v(" "),e("p",[t._v("几个注意点")]),t._v(" "),e("ul",[e("li",[e("p",[t._v("redo log是storage engine内部日志形式，binlog是mysql server维度给所有engine用的归档日志，引擎内部需要处理cash recover的问题，保证持久化，但是他不能反向依赖上一个维度的binlog, 因此只能基于redo log to handle cash recover，这里因此就引入了两个日志之间的consistency，也就带来two phase commit的问题。")])]),t._v(" "),e("li",[e("p",[t._v("tow phase commit的流程中，涉及到两方，协调方executor，参与方innode engine")]),t._v(" "),e("ul",[e("li",[e("p",[t._v("prepare阶段 ")]),t._v(" "),e("ul",[e("li",[t._v("engine flush redo log, 设置为prepare状态")]),t._v(" "),e("li",[t._v("executor执行器flush binlog("),e("strong",[t._v("有些疑惑在于这个步骤算在prepare还是commit其实好像都可以，放在commit应该是先执行)")])])])]),t._v(" "),e("li",[e("p",[t._v("commit阶段")]),t._v(" "),e("ul",[e("li",[t._v("commit transaction(设置redo-log为committed状态)")])])])])])]),t._v(" "),e("p",[t._v("innodb自带  mysql服务层实现 物理日志 具体某个数据页做什么修改 逻辑日志 具体语句的逻辑 循环复写/追加")]),t._v(" "),e("h2",{attrs:{id:"待后续跟进"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#待后续跟进"}},[t._v("#")]),t._v(" 待后续跟进")]),t._v(" "),e("p",[t._v("慢查询日志rows_examined表示执行器调用引擎获取数据行累加的？")]),t._v(" "),e("h2",{attrs:{id:"二阶段提交"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#二阶段提交"}},[t._v("#")]),t._v(" 二阶段提交")]),t._v(" "),e("p",[t._v("参与方 执行器 innodb 阶段一 prepare 更新内存、写redo_log(prepare阶段) 阶段二 commit 写binlog, commit redo_log")]),t._v(" "),e("h2",{attrs:{id:"疑虑"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#疑虑"}},[t._v("#")]),t._v(" 疑虑")]),t._v(" "),e("div",{staticClass:"language- extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[t._v("为啥不直接用binlog做crash-safe？？？？\n\n\n")])])]),e("h2",{attrs:{id:"参考"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#参考"}},[t._v("#")]),t._v(" 参考")]),t._v(" "),e("p",[e("a",{attrs:{href:"https://betterprogramming.pub/mysqls-redolog-and-binlog-1a35bc052489",target:"_blank",rel:"noopener noreferrer"}},[t._v("redo log、binlog介绍"),e("OutboundLink")],1)])])}),[],!1,null,null,null);e.default=n.exports}}]);